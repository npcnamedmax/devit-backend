/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Communityrole = 'MEMBER' | 'MODERATOR' | 'OWNER';

export type Generated<T> =
    T extends ColumnType<infer S, infer I, infer U>
        ? ColumnType<S, I | undefined, U>
        : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface _PrismaMigrations {
    applied_steps_count: Generated<number>;
    checksum: string;
    finished_at: Timestamp | null;
    id: string;
    logs: string | null;
    migration_name: string;
    rolled_back_at: Timestamp | null;
    started_at: Generated<Timestamp>;
}

export interface Comments {
    author_id: string;
    created_at: Generated<Timestamp>;
    description: string;
    id: Generated<string>;
    img_url: Generated<string[] | null>;
    isDeleted: Generated<boolean>;
    num_dislikes: Generated<number>;
    num_likes: Generated<number>;
    parent_id: string | null;
    post_id: string;
}

export interface Community {
    banner_img_url: string | null;
    created_at: Generated<Timestamp>;
    description: string;
    id: Generated<string>;
    isPrivatized: Generated<boolean>;
    name: string;
    owner_id: string;
    profile_img_url: string | null;
    rules: Generated<string[] | null>;
}

export interface Post {
    author_id: string;
    community_id: string;
    created_at: Generated<Timestamp>;
    description: string;
    id: Generated<string>;
    img_url: Generated<string[] | null>;
    isDeleted: Generated<boolean>;
    num_comments: Generated<number>;
    num_dislikes: Generated<number>;
    num_likes: Generated<number>;
    title: string;
}

export interface Resource {
    community_id: string;
    id: Generated<string>;
    title: string;
    url: string;
}

export interface User {
    bio: string | null;
    created_at: Generated<Timestamp>;
    id: Generated<string>;
    profile_url: string | null;
    username: string;
}

export interface UserComments {
    comment_id: string;
    has_disliked: Generated<boolean>;
    has_liked: Generated<boolean>;
    user_id: string;
}

export interface UserCommunity {
    community_id: string;
    joined_at: Generated<Timestamp>;
    role: Generated<Communityrole>;
    user_id: string;
}

export interface UserPost {
    has_disliked: Generated<boolean>;
    has_liked: Generated<boolean>;
    post_id: string;
    user_id: string;
}

export interface DB {
    _prisma_migrations: _PrismaMigrations;
    Comments: Comments;
    Community: Community;
    Post: Post;
    Resource: Resource;
    User: User;
    UserComments: UserComments;
    UserCommunity: UserCommunity;
    UserPost: UserPost;
}
